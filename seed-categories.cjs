const { drizzle } = require('drizzle-orm/postgres-js');
const postgres = require('postgres');
const { categories } = require('./src/server/db/schema');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const connectionString = process.env.DATABASE_URL;
const sql = postgres(connectionString);
const db = drizzle(sql);

async function seedCategories() {
  try {
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');

    const categoriesData = [
      {
        name: '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
        slug: 'real-estate',
        description: '–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
        icon: 'üè†',
        color: '#3B82F6'
      },
      {
        name: '–ò–Ω—Ç–µ—Ä—å–µ—Ä—ã',
        slug: 'interiors', 
        description: '–î–∏–∑–∞–π–Ω –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤ –∏ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
        icon: 'üé®',
        color: '#8B5CF6'
      },
      {
        name: '–§–∞—Å–∞–¥—ã',
        slug: 'facades',
        description: '–§–∞—Å–∞–¥–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –≤–Ω–µ—à–Ω–∏–π –¥–∏–∑–∞–π–Ω –∑–¥–∞–Ω–∏–π', 
        icon: 'üè¢',
        color: '#10B981'
      },
      {
        name: '–ú–µ–±–µ–ª—å',
        slug: 'furniture',
        description: '–ú–µ–±–µ–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞',
        icon: 'ü™ë', 
        color: '#F59E0B'
      }
    ];

    for (const category of categoriesData) {
      await db.insert(categories).values(category).onConflictDoNothing();
      console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${category.name}" –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
    }

    console.log('üéâ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
  } finally {
    await sql.end();
  }
}

seedCategories();
